" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" Make sure Vim has autocmd support
if has('autocmd')
	" Reload .vimrc and .gvimrc files as soon as they have a change
	augroup VimReload
		autocmd!
		autocmd BufWritePost $MYVIMRC source $MYVIMRC
		autocmd BufWritePost $MYGVIMRC source $MYGVIMRC
	augroup END

	" Reload statusline.vim file as soon as it changes
	augroup StatuslineReload
		autocmd!
		autocmd BufWritePost ~/.vim/plugin/statusline.vim source
			\ ~/.vim/plugin/statusline.vim
endif

" ================ General Config ====================

set shortmess=atI               "Don’t show the intro message when starting Vim
set number                      "Line numbers are good
set backspace=indent,eol,start  "Allow backspace in insert mode
set showcmd                     "Show incomplete cmds down the bottom
set showmode                    "Show current mode down the bottom
set noerrorbells                "Disable error bells
set autoread                    "Reload files changed outside vim
set title                       "Show the filename in the window titlebar
set ruler                       "Show the cursor position
set nohidden                    "When I close a tab, remove the buffer
set gdefault                    "Add the g flag to search/replace by default
set laststatus=2                "Always show status line
set mouse=a                     "Enable mouse in all modes
set nostartofline               "Don’t reset cursor to start of line when moving around.
set exrc                        "Enable per-directory .vimrc files
set secure                      "and disable unsafe commands in them
set modeline                    "Respect modeline in files
set esckeys                     "Allow cursor keys in insert mode
set ttyfast                     "Optimize for fast terminal connections
set encoding=utf-8 nobomb       "Use UTF-8 without BOM
set clipboard=unnamed           "Uses the system clipboard as the default register

let mapleader=","               "Change mapleader


" This makes vim act like all other editors, buffers can
" exist in the background without being in a window.
" http://items.sjbach.com/319/configuring-vim-right
set hidden

" turn on syntax highlighting
filetype on
syntax enable
set grepprg=grep\ -nH\ $*

" Set off the other paren
highlight MatchParen ctermbg=4

" ================ Search Settings  =================

set wrapscan          " Set the search scan to wrap around to the top of the file
set ignorecase        " Set search scan to ignore case when search is all lowercase
set smartcase         " But recognize uppercase if it is specified
set visualbell        " Set to use visual bell --  the beeping sucks!
set errorbells        " Enable use of (visual) error bells
set incsearch         " Show results of search scan as it finds them
set hlsearch          " Hilight searches by default
set showmatch         " Always show matching bracket, quote etc.
set matchtime=5       " Tenths of a second to show the matching bracket, quote etc.
set showcmd           " Show the current command in the lower right corner
set magic             " Allow use of regular expressions in the search scans
set viminfo='100,f1   " Save up to 100 marks, enable capital marks

" ================ History and Undo =================

set history=1000 " Keep {num} entries in the command history
set nobackup     " Disable backup files
set noswapfile   " Don't use a swap file in current buffer
set nowb         " Don't write backup before saving

if has('persistent_undo')
	set undofile " Enable persistent undo

	" Set persistent undo directory
	set undodir=~/.vim/undodir
	" Create undo directory if it doesn't exist
	if !isdirectory(expand(&undodir))
		call mkdir(expand(&undodir), 'p')
	endif
endif

" ================ Indentation ======================

set noexpandtab   " Make sure that every file uses tabs
set shiftround    " Round indent to pultiple of 'shiftwidth'
set backspace=indent,eol,start " Backspace over everything in insert mode
set smartindent   " Do smart indenting when starting a new line
set autoindent    " Copy indent from current line, over to the new line
set fo=vt         " Set the format options ('formatoptions')
set nojoinspaces  " :h joinspaces

" Set the tab width
let s:tabwidth=4
exec 'set tabstop='     . s:tabwidth 
exec 'set shiftwidth='  . s:tabwidth
exec 'set softtabstop=' . s:tabwidth

filetype plugin on
filetype indent on

" Display tabs and trailing spaces visually
set list listchars=tab:\ \ ,trail:·

set nowrap       "Don't wrap lines
set linebreak    "Wrap lines at convenient points

" This is totally awesome - remap jj to escape in insert mode.  You'll never type jj anyway, so it's great!
inoremap jj <Esc>
nnoremap JJJJ <Nop>

" ================ Folds ============================

set foldmethod=indent   "fold based on indent
set foldnestmax=3       "deepest fold is 3 levels
set nofoldenable        "dont fold by default

" ================ Completion =======================

set wildmode=list:longest,full
set wildmenu                "enable ctrl-n and ctrl-p to scroll thru matches
set wildignore=*.o,*.obj,*~ "stuff to ignore when tab completing
set wildignore+=*vim/backups*
set wildignore+=*sass-cache*
set wildignore+=*DS_Store*
set wildignore+=vendor/rails/**
set wildignore+=vendor/cache/**
set wildignore+=*.gem
set wildignore+=log/**
set wildignore+=tmp/**
set wildignore+=*.png,*.jpg,*.gif

" ================ Scrolling ========================

set scrolloff=8         "Start scrolling when we're 8 lines away from margins
set sidescrolloff=15
set sidescroll=1

" ================ Colors ==========================

" fix for 256 color terminal for background=dark
if !has('gui_running')
	" Compatibility for Terminal
	let g:solarized_termtrans=1

	if (&t_Co >= 256 || $TERM == 'xterm-256color')
		" Do nothing, it handles itself.
	else
		" Make Solarized use 16 colors for Terminal support
		let g:solarized_termcolors=16
	endif
endif

" Leave this at normal at all times
let g:solarized_contrast='normal'

" Non-text items visibility, normal low or high
let g:solarized_visibility='normal'

" Show trailing white spaces
let g:solarized_hitrail=1

" Disable the Solarized menu, when using GUI
let g:solarized_menu=0

" Don't use any underline styles
let g:solarized_underline=0

set background=dark " Use the light/dark version the color scheme
silent! colorscheme solarized " Set the color scheme to use, no errors allowed

" ================ Functions ========================

" Strip trailing whitespace (,ss)
function! StripWhitespace()
	let save_cursor = getpos(".")
	let old_query = getreg('/')
	:%s/\s\+$//e
	call setpos('.', save_cursor)
	call setreg('/', old_query)
endfunction
noremap <leader>ss :call StripWhitespace()<CR>

" Save a file as root (,W)
noremap <leader>W :w !sudo tee % > /dev/null<CR>

" Automatic commands
if has("autocmd")
	" Enable file type detection
	filetype on
	" Treat .json files as .js
	autocmd BufNewFile,BufRead *.json setfiletype json syntax=javascript
endif
